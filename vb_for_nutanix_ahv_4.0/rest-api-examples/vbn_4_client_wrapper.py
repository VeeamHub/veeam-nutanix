#!/usr/bin/python3

# REST API client wrapper for autogenerated code.
# The wrapper simplifies authentication and provides a convenient way to utilize the autogenerated code
# Additionally, it fixes a few issues with enums in the swagger_client module. 

import swagger_client

class Vbn4RestClient():
    def __create_internal_clients(self, generic_client):
        # We could do it via reflection, but dynamic attributes are not suggested by intellisense. 
        # For this reason it is simpler to just manually set all the required fields.
        self.BackupServersApi = swagger_client.BackupServersApi(generic_client)
        self.ClustersApi = swagger_client.ClustersApi(generic_client)
        self.DashboardApi = swagger_client.DashboardApi(generic_client)
        self.EmailSettingsApi = swagger_client.EmailSettingsApi(generic_client)
        self.JobsApi = swagger_client.JobsApi(generic_client)
        self.MonitoringApi = swagger_client.MonitoringApi(generic_client)
        self.Oauth = swagger_client.Oauth2Api(generic_client)
        self.ProtectedVmsApi = swagger_client.ProtectedVmsApi(generic_client)
        self.RestorePointsApi = swagger_client.RestorePointsApi(generic_client)
        self.ServiceSettingsApi = swagger_client.ServiceSettingsApi(generic_client)
        self.SessionsApi = swagger_client.SessionsApi(generic_client)
        self.TimezonesApi = swagger_client.TimezonesApi(generic_client)

    def __init__(self, url, username, password, https_certificate_path = False):
        configuration = swagger_client.Configuration()
        configuration.host = url
        
        # Turn off certificate validation if certificate is not provided. 
        if https_certificate_path:
            configuration.ssl_ca_cert = https_certificate_path
        else:
            configuration.verify_ssl = False 

        # Create a tmp client without auth header just for auth itself
        auth_api_instance = swagger_client.Oauth2Api(swagger_client.ApiClient(configuration))
        authData: swagger_client.TokenModel = auth_api_instance.oauth2_token(
            grant_type=swagger_client.GrantType.PASSWORD,
            user_name=username,
            password=password,
            updater_token='',
            refresh_token='',
            long_lived_refresh_token = True # Simple way to avoid token re-issue
        )

        # Now we can set auth tokens
        configuration.api_key['Authorization'] = authData.access_token
        configuration.api_key_prefix['Authorization'] = 'Bearer' # Bearer prefix is required for auth

        return self.__create_internal_clients(swagger_client.ApiClient(configuration))
    
    # Swagger autogen breaks some enums if they are not defined in $ref.
    # This static method patches the module by adding the mentioned enums
    def patch_swagger_client_module(module):
        class SortDirection(object):
            ASCENDING = 'Ascending'
            DESCENDING = 'Descending'
        class FilterOperation(object):
            IN = "In"
            CONTAINS = "Contains"
            SUBSET = "Subset"
            SUPERSET = "Superset"
            EQUALS = "Equals"
            NOTEQUALS = "NotEquals"
            LESSTHAN = "LessThan"
            LESSTHANOREQUAL = "LessThanOrEqual"
            GREATERTHAN = "GreaterThan"
            GREATERTHANOREQUAL = "GreaterThanOrEqual"
            EXCLUSIVEOR = "ExclusiveOr"
            OR = "Or"
            AND = "And"
            NOT = "Not"

        module.Direction = SortDirection
        module.Operation = FilterOperation
        return module
    
    
