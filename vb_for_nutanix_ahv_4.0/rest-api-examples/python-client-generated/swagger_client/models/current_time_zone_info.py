# coding: utf-8

"""
    Veeam Backup for Nutanix AHV REST API 4.0

    This REST API reference lists types of Veeam Backup for Nutanix AHV entities,  and contains description of collections and resources which stand for these entities.  Every resource has a JSON object model and includes application data and REST API metadata.  Application data is represented by properties associated with Veeam Backup for Nutanix AHV entities.  REST API metadata is represented by properties specific to the REST API, such as resource IDs, URLs and relationships.  The reference also includes methods that represent operations available to a resource or collection.   # noqa: E501

    OpenAPI spec version: V4
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class CurrentTimeZoneInfo(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'date_time_utc': 'datetime',
        'time_zone_id': 'str',
        'date_time_synchronization': 'DateTimeSynchronizationInfo'
    }

    attribute_map = {
        'date_time_utc': 'dateTimeUtc',
        'time_zone_id': 'timeZoneId',
        'date_time_synchronization': 'dateTimeSynchronization'
    }

    def __init__(self, date_time_utc=None, time_zone_id=None, date_time_synchronization=None):  # noqa: E501
        """CurrentTimeZoneInfo - a model defined in Swagger"""  # noqa: E501
        self._date_time_utc = None
        self._time_zone_id = None
        self._date_time_synchronization = None
        self.discriminator = None
        if date_time_utc is not None:
            self.date_time_utc = date_time_utc
        if time_zone_id is not None:
            self.time_zone_id = time_zone_id
        if date_time_synchronization is not None:
            self.date_time_synchronization = date_time_synchronization

    @property
    def date_time_utc(self):
        """Gets the date_time_utc of this CurrentTimeZoneInfo.  # noqa: E501

        Current UTC time and date.  # noqa: E501

        :return: The date_time_utc of this CurrentTimeZoneInfo.  # noqa: E501
        :rtype: datetime
        """
        return self._date_time_utc

    @date_time_utc.setter
    def date_time_utc(self, date_time_utc):
        """Sets the date_time_utc of this CurrentTimeZoneInfo.

        Current UTC time and date.  # noqa: E501

        :param date_time_utc: The date_time_utc of this CurrentTimeZoneInfo.  # noqa: E501
        :type: datetime
        """

        self._date_time_utc = date_time_utc

    @property
    def time_zone_id(self):
        """Gets the time_zone_id of this CurrentTimeZoneInfo.  # noqa: E501

        Name of a time zone.  # noqa: E501

        :return: The time_zone_id of this CurrentTimeZoneInfo.  # noqa: E501
        :rtype: str
        """
        return self._time_zone_id

    @time_zone_id.setter
    def time_zone_id(self, time_zone_id):
        """Sets the time_zone_id of this CurrentTimeZoneInfo.

        Name of a time zone.  # noqa: E501

        :param time_zone_id: The time_zone_id of this CurrentTimeZoneInfo.  # noqa: E501
        :type: str
        """

        self._time_zone_id = time_zone_id

    @property
    def date_time_synchronization(self):
        """Gets the date_time_synchronization of this CurrentTimeZoneInfo.  # noqa: E501


        :return: The date_time_synchronization of this CurrentTimeZoneInfo.  # noqa: E501
        :rtype: DateTimeSynchronizationInfo
        """
        return self._date_time_synchronization

    @date_time_synchronization.setter
    def date_time_synchronization(self, date_time_synchronization):
        """Sets the date_time_synchronization of this CurrentTimeZoneInfo.


        :param date_time_synchronization: The date_time_synchronization of this CurrentTimeZoneInfo.  # noqa: E501
        :type: DateTimeSynchronizationInfo
        """

        self._date_time_synchronization = date_time_synchronization

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(CurrentTimeZoneInfo, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, CurrentTimeZoneInfo):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
