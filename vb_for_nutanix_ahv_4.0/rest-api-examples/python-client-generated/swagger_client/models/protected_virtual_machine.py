# coding: utf-8

"""
    Veeam Backup for Nutanix AHV REST API 4.0

    This REST API reference lists types of Veeam Backup for Nutanix AHV entities,  and contains description of collections and resources which stand for these entities.  Every resource has a JSON object model and includes application data and REST API metadata.  Application data is represented by properties associated with Veeam Backup for Nutanix AHV entities.  REST API metadata is represented by properties specific to the REST API, such as resource IDs, URLs and relationships.  The reference also includes methods that represent operations available to a resource or collection.   # noqa: E501

    OpenAPI spec version: V4
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class ProtectedVirtualMachine(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'id': 'str',
        'name': 'str',
        'snapshots': 'int',
        'backups': 'int',
        'cluster_id': 'str',
        'cluster_name': 'str',
        'last_protection_date_utc': 'datetime',
        'last_restore_point_id': 'str'
    }

    attribute_map = {
        'id': 'id',
        'name': 'name',
        'snapshots': 'snapshots',
        'backups': 'backups',
        'cluster_id': 'clusterId',
        'cluster_name': 'clusterName',
        'last_protection_date_utc': 'lastProtectionDateUtc',
        'last_restore_point_id': 'lastRestorePointId'
    }

    def __init__(self, id=None, name=None, snapshots=None, backups=None, cluster_id=None, cluster_name=None, last_protection_date_utc=None, last_restore_point_id=None):  # noqa: E501
        """ProtectedVirtualMachine - a model defined in Swagger"""  # noqa: E501
        self._id = None
        self._name = None
        self._snapshots = None
        self._backups = None
        self._cluster_id = None
        self._cluster_name = None
        self._last_protection_date_utc = None
        self._last_restore_point_id = None
        self.discriminator = None
        if id is not None:
            self.id = id
        if name is not None:
            self.name = name
        if snapshots is not None:
            self.snapshots = snapshots
        if backups is not None:
            self.backups = backups
        if cluster_id is not None:
            self.cluster_id = cluster_id
        if cluster_name is not None:
            self.cluster_name = cluster_name
        if last_protection_date_utc is not None:
            self.last_protection_date_utc = last_protection_date_utc
        if last_restore_point_id is not None:
            self.last_restore_point_id = last_restore_point_id

    @property
    def id(self):
        """Gets the id of this ProtectedVirtualMachine.  # noqa: E501

        System ID assigned to a VM in the Nutanix AHV environment.  # noqa: E501

        :return: The id of this ProtectedVirtualMachine.  # noqa: E501
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ProtectedVirtualMachine.

        System ID assigned to a VM in the Nutanix AHV environment.  # noqa: E501

        :param id: The id of this ProtectedVirtualMachine.  # noqa: E501
        :type: str
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this ProtectedVirtualMachine.  # noqa: E501

        Name of the VM.  # noqa: E501

        :return: The name of this ProtectedVirtualMachine.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ProtectedVirtualMachine.

        Name of the VM.  # noqa: E501

        :param name: The name of this ProtectedVirtualMachine.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def snapshots(self):
        """Gets the snapshots of this ProtectedVirtualMachine.  # noqa: E501

        Number of all snapshots created for the VM.  # noqa: E501

        :return: The snapshots of this ProtectedVirtualMachine.  # noqa: E501
        :rtype: int
        """
        return self._snapshots

    @snapshots.setter
    def snapshots(self, snapshots):
        """Sets the snapshots of this ProtectedVirtualMachine.

        Number of all snapshots created for the VM.  # noqa: E501

        :param snapshots: The snapshots of this ProtectedVirtualMachine.  # noqa: E501
        :type: int
        """

        self._snapshots = snapshots

    @property
    def backups(self):
        """Gets the backups of this ProtectedVirtualMachine.  # noqa: E501

        Number of VM backups created with Veeam Backup for Nutanix AHV.  # noqa: E501

        :return: The backups of this ProtectedVirtualMachine.  # noqa: E501
        :rtype: int
        """
        return self._backups

    @backups.setter
    def backups(self, backups):
        """Sets the backups of this ProtectedVirtualMachine.

        Number of VM backups created with Veeam Backup for Nutanix AHV.  # noqa: E501

        :param backups: The backups of this ProtectedVirtualMachine.  # noqa: E501
        :type: int
        """

        self._backups = backups

    @property
    def cluster_id(self):
        """Gets the cluster_id of this ProtectedVirtualMachine.  # noqa: E501

        ID of the cluster to which the VM belongs.  # noqa: E501

        :return: The cluster_id of this ProtectedVirtualMachine.  # noqa: E501
        :rtype: str
        """
        return self._cluster_id

    @cluster_id.setter
    def cluster_id(self, cluster_id):
        """Sets the cluster_id of this ProtectedVirtualMachine.

        ID of the cluster to which the VM belongs.  # noqa: E501

        :param cluster_id: The cluster_id of this ProtectedVirtualMachine.  # noqa: E501
        :type: str
        """

        self._cluster_id = cluster_id

    @property
    def cluster_name(self):
        """Gets the cluster_name of this ProtectedVirtualMachine.  # noqa: E501

        Name of the cluster to which the VM belongs.  # noqa: E501

        :return: The cluster_name of this ProtectedVirtualMachine.  # noqa: E501
        :rtype: str
        """
        return self._cluster_name

    @cluster_name.setter
    def cluster_name(self, cluster_name):
        """Sets the cluster_name of this ProtectedVirtualMachine.

        Name of the cluster to which the VM belongs.  # noqa: E501

        :param cluster_name: The cluster_name of this ProtectedVirtualMachine.  # noqa: E501
        :type: str
        """

        self._cluster_name = cluster_name

    @property
    def last_protection_date_utc(self):
        """Gets the last_protection_date_utc of this ProtectedVirtualMachine.  # noqa: E501

        Date and time when the latest restore point was created.  # noqa: E501

        :return: The last_protection_date_utc of this ProtectedVirtualMachine.  # noqa: E501
        :rtype: datetime
        """
        return self._last_protection_date_utc

    @last_protection_date_utc.setter
    def last_protection_date_utc(self, last_protection_date_utc):
        """Sets the last_protection_date_utc of this ProtectedVirtualMachine.

        Date and time when the latest restore point was created.  # noqa: E501

        :param last_protection_date_utc: The last_protection_date_utc of this ProtectedVirtualMachine.  # noqa: E501
        :type: datetime
        """

        self._last_protection_date_utc = last_protection_date_utc

    @property
    def last_restore_point_id(self):
        """Gets the last_restore_point_id of this ProtectedVirtualMachine.  # noqa: E501

        System ID assigned to the recent restore point in Veeam Backup and Replication.  # noqa: E501

        :return: The last_restore_point_id of this ProtectedVirtualMachine.  # noqa: E501
        :rtype: str
        """
        return self._last_restore_point_id

    @last_restore_point_id.setter
    def last_restore_point_id(self, last_restore_point_id):
        """Sets the last_restore_point_id of this ProtectedVirtualMachine.

        System ID assigned to the recent restore point in Veeam Backup and Replication.  # noqa: E501

        :param last_restore_point_id: The last_restore_point_id of this ProtectedVirtualMachine.  # noqa: E501
        :type: str
        """

        self._last_restore_point_id = last_restore_point_id

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ProtectedVirtualMachine, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ProtectedVirtualMachine):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
